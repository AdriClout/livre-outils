# Serpents et échelles

```{=tex}
\begin{center}

Marc-Antoine Rancourt, Flavie Lachance, Justine Béchard, William Poirier

\end{center}
```
## Introduction

Alors que les chapitres précédents se sont consacrés à la présentation théorique et pratique des sciences sociales numériques, le présent chapitre s'efforcera à aider le lecteur à faire sens de la grande quantité d'information que contient l'ouvrage et à commencer sa propre aventure numérique. Ce chapitre peut être vu comme le résultat de la rencontre entre un jeu éducatif et un guide d'apprentissage. À ce propos, le titre n'est pas anodin. Il est possible de visualiser l'apprentissage de nouveaux outils numériques à l'aide d'un jeu de serpents et échelles. Généarlement, la progression du protagoniste se fait en toute tranquilité. À certains moments, l'aventure est corsée par des pièges ou des difficultés propres à sa progression -- les serpents. Lorsque cela arrive, le protagoniste régresse ou cesse d'avancer. À d'autres moments, l'aventure est facilitée par des occasions positives particulières -- les échelles.

En plus d'une représentation visuelle du tableau d'apprentissage de serpents et échelles qui permettra au lecteur de rendre l'acquisition de nouvelles connaissances plus agréable, ce chapitre offre des lectures, des exercices et des travaux pratiques pour les aventuriers numériques débutants, intermédiaires et avancés. Le corps du texte du présent chapitre est divisé en trois parties en lien avec les niveaux de connaissances des outils numériques -- débutant, intermédiaire et avancé -- et chacune d'entre elles comportent une première section concernant sur des lectures, une seconde portant sur des tutoriels à faire en ligne et une troisième sur des travaux pratiques à réaliser dans RStudio. De plus, chaque partie termine par un résumé des principaux « serpents » associés au niveau d'apprentissage qui lui est propre. Le chapitre se termine par une section qui aidera le lecteur à voler de ses propres ailes.

### Datacamp

Tout au long du parcours, des exercices Datacamp vous seront proposés. Datacamp est une plateforme d'apprentissage en ligne proposant des exercices interactifs en ligne variés, axé principalement sur l'analyse et les données.

Utiliser Datacamp comporte de nombreux avantages. Premièrement, la plateforme est également facile à utiliser et permet un apprentissage ludique. La plateforme a également un forum où il est possible d'interagir avec les autres utilisateurs et poser des questions. Un autre avantage de Datacamp est son accessibilité. En plus des cours accessibles gratuitement, Datacamp offre des réductions sur les abonnements pour les étudiants et les enseignants. Il est également possible pour les enseignants d'obtenir gratuitement un compte Datacamp Entreprise à des fins d'utilisation éducative.

Toutefois, Datacamp comporte certains désavantages. En effet, la plateforme demeure un jeu et, mis à part le forum et les indices fournis dans les exercices, n'apporte pas beaucoup de soutien. Comme nous le verrons plus tard, il est important de mettre en pratique ses connaissances afin de consolider ses acquis.

Malgré tout, il s'agit d'une manière tout autant enrichissante que divertissante pour se familiariser avec le langage R.

## Débutant

### Environnements de programmation

### Les alternatives à Word : les langages de balisage

### Serpents

Beaucoup de nouvelles informations ont été présentées jusqu'à présent dans ce livre. Il est normal de se sentir dépasser et de ne pas tout comprendre. En fait, il aurait été surprenant qu'un lecteur qui débute l'aventure numérique ait tout compris. L'important est de garder une attitude propice à l'apprentissage et se rappeler que rien de ceci n'est inatteignable. C'est au tout début du parcours que se trouve le premier serpent : **croire qu'il sera trop difficile d'apprendre, que c'est un objectif impossible à atteindre**. Même les auteurs de ce livre ont, un jour, commencés par faire *Hello World!* dans la console de RStudio. Le premier serpent est souvent lié à un autre piège qui frappe les codeurs débutants : **la peur de demander de l'aide**. Il faut garder à l'esprit qu'une grande quantité des utilisateurs des outils présentés dans le présent livre sont passés par l'incertitude du début et la crainte du jugement des autres. N'ayez pas peur de poser vos questions, c'est comme cela qu'on apprend.

Une autre catégorie de serpents pour les débutants concerne la pratique des connaissances nouvellement acquises. Les serpents de cette catégorie sont au nombre de trois. Tout d'abord, on retrouve **la croyance qu'il est possible d'apprendre sans pratiquer**. Bien que cela puisse être possible pour quelques personnes ayant une mémoire phénoménale, la réalité est qu'il sera difficile pour le lecteur moyen de retenir l'information contenue dans ce livre et dans les exercices sans pratiquer les nouvelles notions. Le second serpent de cette catégorie est lié à ce dernier point : DataCamp -- où il y a des indices et du code déjà écrit -- ne forme pas à lui seul des codeurs. Il faut faire attention à **ne pas rester pris dans une boucle infinie de tutoriels**. Faire des tests avec des projets personnels aide à assimiler les nouvelles connaissances en plus d'être plus intéressant.

Le dernier serpent pour débutants est le suivant : **ne pas construire des bases solides avant d'aller plus loin**. Plusieurs nouveaux codeurs, excités par les nouveaux outils qu'ils apprennent, oublient qu'il est primordial de bien comprendre les éléments de base de la programmation et de la gestion de données avant de se lancer dans des projets plus complexes. Bien qu'il ne soit pas requis de connaître la mécanique pour conduire une automobile, il est tout de même parfois utile -- voir nécessaire -- de comprendre comment entretenir celle-ci.

## Intermédiaire

### La gestion des références

### Visualisation graphique en R

### Serpents :

À la suite des différents exercices et lectures complètés dans le cadre de cette familiarisation aux sciences sociales numériques, le lecteur doit s'assurer d'éviter certains pièges qui se dressent sur le chemin des chercheurs de niveau intermédiaire. Le premier d'entre eux est **vouloir apprendre plusieurs langages et n'en maîtriser aucun**. Plusieurs chercheurs, lorsqu'ils commencent à maîtriser de nouveaux outils, s'emballent et souhaitent en apprendre davantage. C'est une bonne chose, mais il faut faire attention à ne pas apprendre que quelques éléments de plusieurs langages de programmation, et plutôt en maîtriser un. Comme le dit un diction populaire, « qui trop embrasse mal étreint ».

Un second serpent auquel de jeunes chercheurs sont la proie est **coder en n'utilisant pas un style et une planification cohérente et constante**. En n'adoptant pas un style standard -- ou en n'utilisant pas le plus souvent le même style -- il peut devenir difficle pour les autres et pour soi-même de se retrouver dans le code. Cela peut causer d'importants problèmes de compréhension ou des problèmes techniques. Il est rare qu'un même code ne serve qu'une seule fois. Il est donc de viser à ce que le code qu'on produit soit compréhensible, transférable et -- idéalement -- optimisé. Un autre serpent s'inscrivant dans la lignée du précédent est **écrire du code mais ne pas le commenter**. Commenter son code contribue grandement à la transférabilité et la pérennité de son travail. Bien que la fonction d'une section de code peut sembler évidente pour son créateur le jour où elle est produite, elle ne le sera pas nécessairement pour d'autres ou pour lui-même dans le futur.

Le troisième serpent concerne l'utilisation des packages R. De nombreux packages r sont disponibles sur Internet. Dans certaines situations, l'utilisation de ceux-ci peut représenter un gain de temps et résoudre certains problèmes spécifiques. Toutefois, pour des tâches relativement simples, utiliser un package r risque d'ajouter une complexité inutile. En effet, comprendre un package R et l'adapter en fonction de son projet peut être long et laborieux. Il est donc souvent beaucoup plus efficace d'écrire son propre code plutôt que d'utiliser un package R.

Le dernier piège se dressant sur le chemin d'un chercheur de niveau intermédiaire est de **croire qu'il a suffisamment de connaissances et ne pas sortir de sa zone de confort**. L'apprentissage de techniques plus complexes demande de sortir de sa zone de confort et de se confronter à l'inconnu. Cela demande également d'accepter qu'on ne connait pas tout et qu'il y aura des échecs et des frustrations. C'est ainsi qu'un chercheur intermédiaire peut dépasser ses limites et devenir un chercheur de niveau avancé.

## Avancé

### Gestion de projet et de données

### Outils d'intelligence artificielle

### Snakes

-   La peur de partager son code

-   Laisser le parfait être l'ennemi du bien

-   Manquer d'empathie et de compréhension envers les nouveaux utilisateurs

-   Douchebagisme

## Conclusion
